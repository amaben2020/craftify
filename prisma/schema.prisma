// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Artisan {
   id Int @id @default(autoincrement())
   profile ArtisanProfile?
   appliedClientJobs ClientJob?
   occupation String?
}

model Client {
     id Int @id @default(autoincrement())
     profile ClientProfile?
    jobs ClientJob?
}

model ClientProfile {
 id Int @id @default(autoincrement())
 firstName String
 lastName String
 email String
 image String
 address String?
 client Client @relation(fields: [clientId], references: [id])
 clientId Int @unique // relation scalar field i.e foreign key.
}


model ArtisanProfile {
 id Int @id @default(autoincrement())
 username String
 email String
 occupation String?
 artisan Artisan @relation(fields: [artisanId], references: [id])
 artisanId Int @unique // relation scalar field i.e foreign key
 refereeId Int @unique
 referee Referee @relation(fields: [refereeId], references: [id])
}

model Referee{
  id Int @id @default(autoincrement())
  name String
  relationship String
  contactInformation String
  artisan ArtisanProfile?
}
model ClientJob {
  id Int @id @default(autoincrement())
  title String
  images String[]
  postedBy Client @relation(fields: [postedById], references: [id])
  postedById Int @unique
  appliedBy Artisan @relation(fields: [appliedById], references: [id])
  appliedById Int @unique
}
